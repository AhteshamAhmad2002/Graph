#include <iostream>
#include <vector>
using namespace std;

int main() {
    int nodes, edges;
    cout << "Enter number of nodes and edges: ";
    cin >> nodes >> edges;

    // Create an adjacency list (0-based indexing)
    vector<vector<int>> adjList(nodes);

    cout << "Enter the edges (u v):\n";
    for (int i = 0; i < edges; i++) {
        int u, v;
        cin >> u >> v;

        // For undirected graph
        adjList[u].push_back(v);
        adjList[v].push_back(u);

        // For directed graph, just do: adjList[u].push_back(v);
    }

    // Display the adjacency list
    cout << "\nAdjacency List:\n";
    for (int i = 0; i < nodes; i++) {
        cout << i << " -> ";
        for (int j : adjList[i]) {
            cout << j << " ";
        }
        cout << endl;
    }

    return 0;
}
